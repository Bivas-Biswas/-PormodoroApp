{"version":3,"sources":["Components/Button.js","Context/SettingContex.js","Components/CountdownAnimation.js","Components/SetPomodoro.js","App.js","index.js"],"names":["Button","title","activeClass","_callback","className","onClick","SettingContext","createContext","SettingContexProvider","props","useState","pomodoro","setPomodoro","executing","setExcuting","startAnimate","setstartAnimate","updateExecute","updateSettings","setTimerTime","evalute","active","work","short","long","Provider","value","startTimer","pauseTimer","children","remainingTime","minutes","Math","floor","seconds","updateType","SettingsBtn","setCurrentTimer","active_state","stopAimate","CountdownAnimation","timer","animate","useContext","isPlaying","duration","colors","handleColor","strokeWidth","size","trailColor","onComplete","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","track","borderRadius","rail","Slider","useStyles","makeStyles","SetPomodoro","newTimer","setNewTimer","useEffect","curr","JSON","parse","localStorage","getItem","setItem","stringify","handleChange","name","input","parseInt","resetValue","noValidate","onSubmit","e","preventDefault","classes","min","max","onChange","type","App","undefined","ReactDOM","render","SettingContex","document","getElementById"],"mappings":"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","file":"static/js/main.0aeb2900.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = ({title, activeClass, _callback}) => {\r\n    return (\r\n        <div>\r\n            <button className={activeClass} onClick={_callback}>{title}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React, { createContext, useState } from 'react'\r\n\r\nexport const SettingContext = createContext(null)\r\n\r\nconst SettingContexProvider = (props) => {\r\n    const [pomodoro, setPomodoro] = useState(0)\r\n    const [executing, setExcuting] = useState({})\r\n    const [startAnimate, setstartAnimate] = useState(false)\r\n\r\n    function setCurrentTimer(active_state) {\r\n        updateExecute({\r\n            ...executing,\r\n            active: active_state\r\n        })\r\n        setTimerTime(executing)\r\n    }\r\n\r\n    // start animation fn\r\n    function startTimer() {\r\n        setstartAnimate(true)\r\n    }\r\n\r\n    // pause animation fn\r\n    function pauseTimer() {\r\n        setstartAnimate(false)\r\n    }\r\n\r\n    // pass time to counter\r\n    const children = ({ remainingTime }) => {\r\n        const minutes = Math.floor(remainingTime / 60)\r\n        const seconds = remainingTime % 60\r\n        const updateType = (evalute) => {\r\n            // eslint-disable-next-line default-case\r\n            switch (evalute.active) {\r\n                case 'work':\r\n                    return 'Work'\r\n                case 'short':\r\n                    return 'Short Break'\r\n                case 'long':\r\n                    return 'long Break'\r\n            }\r\n        }\r\n\r\n        return <div className='timer-box'>\r\n            <div className='curr-timer'>\r\n                {seconds === 0 ? `${minutes}:00`: `${minutes}:${seconds}`}\r\n            </div>\r\n            <div className='active-timer'>{updateType(executing)}</div>\r\n        </div>\r\n    }\r\n\r\n    // clear session storage\r\n    const SettingsBtn = () => {\r\n        setExcuting({})\r\n        setPomodoro(0)\r\n    }\r\n\r\n    const updateExecute = (updateSettings) => {\r\n        setExcuting(updateSettings)\r\n        setTimerTime(updateSettings)\r\n    }\r\n\r\n    const setTimerTime = (evalute) => {\r\n        switch (evalute.active) {\r\n            case 'work':\r\n                setPomodoro(evalute.work)\r\n                break;\r\n            case 'short':\r\n                setPomodoro(evalute.short)\r\n                break;\r\n            case 'long':\r\n                setPomodoro(evalute.long)\r\n                break;\r\n            default:\r\n                setPomodoro(0)\r\n                break;\r\n        }\r\n    }\r\n\r\n    function stopAimate() {\r\n        setstartAnimate(false)\r\n    }\r\n\r\n    return (\r\n        <SettingContext.Provider\r\n            value={{\r\n                pomodoro,\r\n                executing,\r\n                updateExecute,\r\n                startAnimate,\r\n                startTimer,\r\n                pauseTimer,\r\n                children,\r\n                SettingsBtn,\r\n                setCurrentTimer,\r\n                stopAimate\r\n            }}>\r\n            {props.children}\r\n        </SettingContext.Provider>\r\n    )\r\n}\r\n\r\nexport default SettingContexProvider\r\n","import React, { useContext } from 'react'\r\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer'\r\nimport { SettingContext } from '../Context/SettingContex'\r\n\r\nconst CountdownAnimation = ({timer, animate, children }) => {\r\n\r\n    const { executing, setCurrentTimer } = useContext(SettingContext)\r\n\r\n    const handleColor=()=>{\r\n        switch (executing.active) {\r\n            case 'work':\r\n                return [['#FE4D4C']]\r\n\r\n            case 'short':\r\n                return [['#05EB8B']]\r\n\r\n            case 'long':\r\n                return [['#0BBCDA']]\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return (\r\n        <CountdownCircleTimer\r\n\r\n            isPlaying={animate}\r\n            duration={timer * 60}\r\n            colors={\r\n                handleColor()\r\n                }\r\n            strokeWidth={6}\r\n            size={220}\r\n            trailColor=\"#151932\"\r\n            onComplete={() => {\r\n                switch (executing.active) {\r\n                    case 'work':\r\n                        setCurrentTimer('short')\r\n                        break;\r\n                    case 'short':\r\n                        setCurrentTimer('long')\r\n                        break;\r\n                    case 'long':\r\n                        setCurrentTimer('work')\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </CountdownCircleTimer\r\n>\r\n    )\r\n}\r\n\r\nexport default CountdownAnimation\r\n","import React, {useContext, useState, useEffect} from 'react'\r\nimport {SettingContext} from '../Context/SettingContex'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport {withStyles, makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n        color: '#52af77',\r\n        height: 8,\r\n    },\r\n    thumb: {\r\n        height: 24,\r\n        width: 24,\r\n        backgroundColor: '#fff',\r\n        border: '2px solid currentColor',\r\n        marginTop: -8,\r\n        marginLeft: -12,\r\n    },\r\n    track: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n    rail: {\r\n        height: 8,\r\n        borderRadius: 4,\r\n    },\r\n})(Slider);\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        color: props => props.color,\r\n    },\r\n});\r\n\r\nconst SetPomodoro = () => {\r\n\r\n    const [newTimer, setNewTimer] = useState({\r\n        work: 25,\r\n        short: 5,\r\n        long: 15,\r\n        active: 'work'\r\n    })\r\n\r\n    const {updateExecute} = useContext(SettingContext)\r\n\r\n    // get local stroge value\r\n    useEffect(() => {\r\n        let curr = JSON.parse(localStorage.getItem('time'))\r\n        if(curr){\r\n            setNewTimer(curr)\r\n        }\r\n    }, []);\r\n\r\n    // update local stroge\r\n    useEffect(() => {\r\n        localStorage.setItem('time', JSON.stringify(newTimer));\r\n    }, [newTimer]);\r\n\r\n    const handleChange = name => (input, value) => {\r\n        // eslint-disable-next-line default-case\r\n        switch (name) {\r\n            case 'work':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    work: parseInt(value)\r\n                })\r\n                break;\r\n            case 'shortBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    short: parseInt(value)\r\n                })\r\n                break;\r\n            case 'longBreak':\r\n                setNewTimer({\r\n                    ...newTimer,\r\n                    long: parseInt(value)\r\n                })\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        updateExecute(newTimer)\r\n    }\r\n\r\n    const handleReset = () => {\r\n        const resetValue = {\r\n            ...newTimer,\r\n            work: 25,\r\n            short: 5,\r\n            long: 15\r\n        }\r\n        setNewTimer(resetValue)\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <button onClick={handleReset}>Reset</button>\r\n            <form noValidate onSubmit={handleSubmit}>\r\n                <div className=\"input-wrapper\">\r\n                    <h1>Timer</h1>\r\n\r\n                    {/*Focus slider 1*/}\r\n                    <h3>Focus</h3>\r\n                    <p>{newTimer.work}:00</p>\r\n                    <PrettoSlider\r\n                        classes={{\r\n                            root: useStyles({color: '#FE4D4C'}).root\r\n                        }}\r\n                        value={newTimer.work}\r\n                        min={1}\r\n                        max={90}\r\n                        onChange={handleChange('work')}\r\n                    />\r\n\r\n                    {/*Short Break slider 2*/}\r\n                    <h3>Short Break</h3>\r\n                    <p>{newTimer.short}:00</p>\r\n                    <PrettoSlider\r\n                        classes={{\r\n                            root: useStyles({color: '#05EB8B'}).root\r\n                        }}\r\n                        value={newTimer.short}\r\n                        min={1}\r\n                        max={90}\r\n                        onChange={handleChange('shortBreak')}/>\r\n\r\n                    {/*Long Break slider 3*/}\r\n                    <h3>Long Break</h3>\r\n                    <p>{newTimer.long}:00</p>\r\n                    <PrettoSlider\r\n                        classes={{\r\n                            root: useStyles({color: '#0BBCDA'}).root\r\n                        }}\r\n                        value={newTimer.long}\r\n                        min={1}\r\n                        max={90}\r\n                        onChange={handleChange('longBreak')}/>\r\n                </div>\r\n\r\n                <button type='submit'>Set Timer</button>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SetPomodoro\r\n","import React, {useContext, useEffect} from \"react\";\nimport Button from \"./Components/Button\";\nimport CountdownAnimation from \"./Components/CountdownAnimation\";\nimport SetPomodoro from \"./Components/SetPomodoro\";\nimport {SettingContext} from \"./Context/SettingContex\";\nimport './scss/main.scss'\n\nconst App = () => {\n    const {\n        pomodoro,\n        executing,\n        startAnimate,\n        children,\n        startTimer,\n        pauseTimer,\n        updateExecute,\n        setCurrentTimer,\n        SettingsBtn\n\n    } = useContext(SettingContext)\n    // console.log(pomodoro)\n\n    useEffect(() => {\n        updateExecute(executing)\n    }, [updateExecute,executing, startAnimate])\n\n    return (\n        <div className=\"container\">\n            {pomodoro !== 0 ?\n                <>\n                    <h1 className='main-header'>Pomodoro</h1>\n                    <small>Be productive the right way.</small>\n                    <ul className=\"labels\">\n                        <li>\n                            <Button\n                                title=\"Work\"\n                                activeClass={executing.active === 'work' ? 'active-label' : undefined}\n                                _callback={() => {setCurrentTimer('work')}}\n                            />\n                        </li>\n                        <li>\n                            <Button\n                                title=\"Short Break\"\n                                activeClass={executing.active === 'short' ? 'active-label' : undefined}\n                                _callback={() => setCurrentTimer('short')}\n                            />\n                        </li>\n                        <li>\n                            <Button\n                                title=\"Long Break\"\n                                activeClass={executing.active === 'long' ? 'active-label' : undefined}\n                                _callback={() => setCurrentTimer('long')}\n                            />\n                        </li>\n                    </ul>\n                    <Button title=\"Settings\" _callback={SettingsBtn} />\n                    <div className=\"timer-container\">\n                        <div className=\"time-wrapper\">\n                            <CountdownAnimation\n                                key={pomodoro}\n                                timer={pomodoro}\n                                animate={startAnimate}\n                            >\n                                {children}\n                            </CountdownAnimation>\n                        </div>\n                    </div>\n                    <div className=\"button-wrapper\">\n                        <Button title=\"Start\" activeClass={!startAnimate ? 'active' : undefined} _callback={startTimer} />\n                        <Button title=\"Pause\" activeClass={startAnimate ? 'active' : undefined} _callback={pauseTimer} />\n                    </div>\n                </> : <SetPomodoro />}\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport SettingContexProvider from './Context/SettingContex';\n\nReactDOM.render(\n  <SettingContexProvider>\n    <App />\n    </SettingContexProvider>,\n  document.getElementById('root')\n);\n\n//import Test from \"./test\";\n// ReactDOM.render(\n//     <React.StrictMode>\n//         {/* <App2 /> */}\n//         <Test/>\n//     </React.StrictMode>,\n//     document.getElementById('root')\n// );"],"sourceRoot":""}